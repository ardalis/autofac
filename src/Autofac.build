<?xml version="1.0" encoding="utf-8" ?>
<Project DefaultTargets="integrate" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
	<Import Project="Resource\Build\MSBuild.Community.Tasks.targets" />
	<Import Project="Resource\Build\NCoverExplorer.MSBuildTasks.targets"/>
	<!-- Main build entry file (extends development builds)-->
	<PropertyGroup>
		<!--
			 Primary configuration properties (override them via command line
			 if needed
		-->
		<BuildPath Condition="$(BuildPath)==''">$(MSBuildProjectDirectory)\Build</BuildPath>
		<Configuration Condition="$(Configuration)==''">Release</Configuration>
		<ArtifactDirectory Condition="$(ArtifactDirectory)==''">$(BuildPath)\Artifact</ArtifactDirectory>
		<BuildFramework></BuildFramework>

		<PackageDirectory Condition="$(PackageDirectory)==''">$(BuildPath)\_Package</PackageDirectory>
		<Version Condition="$(Version)==''">0.0.0.0</Version>
		<AllowPartiallyTrustedCallers Condition="$(AllowPartiallyTrustedCallers)==''">true</AllowPartiallyTrustedCallers>
		<!--
			Derived configuration properties
				 -->
		<TestPath>$(BuildPath)\Test</TestPath>
		<LibraryPath>$(BuildPath)\Library</LibraryPath>
		<LicensePath>$(BuildPath)\License</LicensePath>
		
		<LibrarySource>Source\Autofac\bin\$(Configuration)</LibrarySource>
		<MefSource>Source\Autofac.Integration.Mef\bin\$(Configuration)</MefSource>
		<WcfSource>Source\Autofac.Integration.Wcf\bin\$(Configuration)</WcfSource>
    <WebSource>Source\Autofac.Integration.Web\bin\$(Configuration)</WebSource>
    <CompatSource>Source\Autofac.V1Compatibility\bin\$(Configuration)</CompatSource>
    <SourceExclusions>**\.svn\**\*.*;**\_svn\**\*.*;**\*.user;**\*.suo;**\*.db;**\bin\**\*.*;**\obj\**\*.*;</SourceExclusions>
		<ProjectName>$(MSBuildProjectName)</ProjectName>
	</PropertyGroup>

	<!--Default-->
	<PropertyGroup Condition="$(BuildFramework)==''">
		<PackageName>$(ProjectName)-$(Version)</PackageName>
		<BuildConstants>NET35</BuildConstants>
	</PropertyGroup>
	
	<!--Silverlight 2.0 runtime-->
	<PropertyGroup Condition="$(BuildFramework)=='SL2'">
		<BuildTargets>Silverlight 2.0</BuildTargets>
		<BuildConstants>SILVERLIGHT</BuildConstants>
		<PackageName>$(ProjectName)-$(Version)-SL2</PackageName>
	</PropertyGroup>

	<!--Silverlight 3.0 runtime-->
	<PropertyGroup Condition="$(BuildFramework)=='SL3'">
		<BuildTargets>Silverlight 3.0</BuildTargets>
		<BuildConstants>SILVERLIGHT</BuildConstants>
		<PackageName>$(ProjectName)-$(Version)-SL3</PackageName>
	</PropertyGroup>
	<!-- 
	 Solution redirects. Every VS project normally knows how to support these targets
		-->
	<Target Name="Build">
		<MSBuild Projects="$(ProjectName).sln" Targets="Build" Properties="Configuration=$(Configuration)$(BuildFramework);BuildConstants=$(BuildConstants);MSBuildTargets=$(BuildTargets)"/>
	</Target>

	<Target Name="Clean">
		<MSBuild Projects="$(ProjectName).sln" Targets="Clean" Properties="Configuration=$(Configuration)$(BuildFramework);BuildConstants=$(BuildConstants);MSBuildTargets=$(BuildTargets)" />

		<CreateItem Include="**/Debug/**/*.*;**/Release/**/*.*">
			<Output ItemName="_binaryFiles" TaskParameter="Include"/>
		</CreateItem>
		<Delete Files="@(_binaryFiles)" TreatErrorsAsWarnings="true"/>
		<RemoveDir Directories="$(BuildPath)" />
	</Target>

	<Target Name="Rebuild" DependsOnTargets="Clean;Build;" />
	
	<Target Name="Integrate" DependsOnTargets="Clean;Test;Report" />
	<Target Name="Release" DependsOnTargets="Clean;_Version;Build;Test;Report;Distrib" />

	<Target Name="Report" DependsOnTargets="Clean;Build;Copy">
		<MakeDir Directories="$(ArtifactDirectory)" />
		<!--<FxCop ToolPath="Resource/Tool/FxCop" ProjectFile="$(MSBuildProjectName).FxCop" AnalysisReportFileName="$(ArtifactDirectory)/$(MSBuildProjectName).fxcop-result.xml"/>-->
	</Target>

	<!--
	 Copies built items to the distrib directory
	 -->
	<Target Name="Copy" DependsOnTargets="Build">
		<MakeDir Directories="$(BuildPath);"/>
		
		<!--Libraries-->
		<CreateItem Include="$(LibrarySource)\*.*;$(MefSource)\*.*;$(WebSource)\*.*;$(WcfSource)\*.*;$(CompatSource)\*.*">
			<Output ItemName="unmergedFiles" TaskParameter="Include"/>
		</CreateItem>
		<Copy SourceFiles="@(unmergedFiles)" DestinationFolder="$(LibraryPath)" />

		<!--All Tests-->
		<CreateItem Include="Test\**\bin\$(Configuration)\*.*">
			<Output ItemName="TestFiles" TaskParameter="Include"/>
		</CreateItem>
		<Copy SourceFiles="@(TestFiles)" DestinationFolder="$(TestPath)" />
		<CreateItem Include="Test\**\bin\$(Configuration)\Configuration\*.*">
			<Output ItemName="ConfigFiles" TaskParameter="Include"/>
		</CreateItem>
		<Copy SourceFiles="@(ConfigFiles)" DestinationFolder="$(TestPath)\Configuration" />
		
		<!--Licenses-->
		<CreateItem Include="*License.txt;Resource\Library\*\*License.txt">
			<Output ItemName="licenseFiles" TaskParameter="Include"/>
		</CreateItem>
		<Copy SourceFiles="@(licenseFiles)" DestinationFolder="$(LicensePath)" />
	</Target>

	<Target Name="Config">
		<Message Text="This sub-solution does not need configuration" />
	</Target>
	
	<Target Name="Test" DependsOnTargets="Build;Copy">
		<MakeDir Directories="$(ArtifactDirectory)" />

		<CreateItem Include="$(TestPath)\Autofac.Test*dll">
			<Output ItemName="_testFiles" TaskParameter="Include"/>
		</CreateItem>

		<CreateItem Include="$(TestPath)\Autofac*dll" Exclude="$(TestPath)\Autofac.Test*dll">
			<Output ItemName="_coverageFiles" TaskParameter="Include"/>
		</CreateItem>

		<!--@(_testFiles->'&quot;%(FullPath)&quot;', ' ')-->
		<!--
		Important: if this code breaks down and you are running 64 bit machine,
		then you have to force NUnit-console and NCover to 32 bit mode
		with CorFlags.exe from .NET SDK 2.0 (included in NCover and NUnit folders)
		-->
		<NCover ToolPath="Resource\Tool\NCover"
			CommandLineExe="Resource/Tool/NUnit/nunit-console-x86.exe"
			CommandLineArgs="@(_testFiles->'&quot;%(FullPath)&quot;', ' ') /nologo /noshadow /xml=&quot;$(ArtifactDirectory)\$(ProjectName).Tests-result.xml&quot;"
			AssemblyList="@(_coverageFiles)"
			CoverageFile="$(ArtifactDirectory)\$(ProjectName)-coverage.xml"
			LogFile="$(ArtifactDirectory)\$(ProjectName)-coverage.log"
			ExcludeAttributes="System.Diagnostics.CodeAnalysis.NoCodeCoverageAttribute;System.Runtime.CompilerServices.CompilerGeneratedAttribute;System.CodeDom.Compiler.GeneratedCodeAttribute"
			ContinueOnError="false"
		/>

		<NCoverExplorer
			ToolPath="Resource\Tool\NCoverExplorer"
			ProjectName="$(ProjectName)"
			ReportType="ModuleClassSummary"
			XmlReportName="$(ArtifactDirectory)\$(ProjectName).fCoverage-result.xml"
			HtmlReportName="$(ArtifactDirectory)\$(ProjectName).fCoverage-summary.html"
			ShowExcluded="True"
			SatisfactoryCoverage="75"
			MinimumCoverage="75"
			Sort="FunctionCoverageAscending"
			CoverageFiles="$(ArtifactDirectory)\$(ProjectName)-coverage.xml"
		/>
	</Target>

	<Target Name="_Version">
		<CreateItem Include="**\GlobalAssemblyInfo.cs">
			<Output ItemName="_VersionPaths" TaskParameter="Include"/>
		</CreateItem>
		<CreateItem Include="@(_VersionPaths->'%(SubFolder)%(RecursiveDir)VersionAssemblyInfo.cs')">
			<Output ItemName="_VersionFiles" TaskParameter="Include"/>
		</CreateItem>
		<Time Format="yyyy-MM-dd HH:mm">
			<Output TaskParameter="FormattedTime" PropertyName="BuildTime" />
		</Time>
		<AssemblyInfo OutputFile="%(_VersionFiles.FullPath)" CodeLanguage="CS"
			AssemblyVersion="$(Version)"
			AssemblyFileVersion="$(Version)"
			AssemblyConfiguration="$(Configuration) built on $(BuildTime)" />
		<WriteLinesToFile
			File="%(_VersionFiles.FullPath)"
			Overwrite="false"
			Lines="[assembly: System.Security.AllowPartiallyTrustedCallers]"
			Condition="$(AllowPartiallyTrustedCallers)==true" />
	</Target>


	<Target Name="WipeResources">
		<!--Wipe old version files-->
		<CreateItem Include="**\VersionAssemblyInfo.cs">
			<Output ItemName="_VersionPaths" TaskParameter="Include"/>
		</CreateItem>
		<Delete Files="@(_VersionPaths)" />
	</Target>


	<Target Name="GenerateHelp" DependsOnTargets="Build;Copy" Condition="$(BuildFramework)==''">
		<Exec Command="Resource\Tool\SHFB\SandcastleBuilderConsole.exe $(ProjectName).shfb" />
	</Target>

	<Target Name="Distrib" DependsOnTargets="Clean;Build;Copy;Config;GenerateHelp">
		<MakeDir Directories="$(PackageDirectory)" />

		<!-- Archive-->
		<CreateItem Include="$(LibraryPath)\Autofac*.*;$(LicensePath)\*.*">
			<Output ItemName="_libFiles" TaskParameter="Include" />
		</CreateItem>
		<Zip Files="@(_libFiles)" ZipFileName="$(PackageDirectory)\$(PackageName).zip" Flatten="false" WorkingDirectory="$(BuildPath)" />
	</Target>
</Project>
